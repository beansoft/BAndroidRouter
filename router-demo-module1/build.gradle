apply plugin: 'com.android.library'

android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ targetModuleName : 'Other',// 模块名, 用于加载和生成映射关系
                              assetsDir : "$projectDir/src/main/assets".toString() // 可选, 配置时会自动生成assets/modules
                ]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/MANIFEST.MF'
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    annotationProcessor project(':router-compiler')
    implementation project(':router-library')
    compileOnly project(':router-annotation')// 最终项目中不出现Annotation, 增加安全性
//    compileOnly 'com.android.support:appcompat-v7:22.2.1'
}

//android.libraryVariants.all { variant ->
//    variant.outputs.each { output ->
//        def outputFile = output.outputFile
//        def fileName
//        if (outputFile != null && outputFile.name.endsWith('.aar')) {
//            print "=======> outputFile =  " + outputFile + "\n"
//            if (outputFile.name.contains('debug')) {
//                def name = "${rootDir}/libs/" + outputFile.name// router-demo-app
//                print "=======> " + name + "\n"
////                output.outputFile = outputFile// 保留旧的library文件
////                output.outputFile = file(name)
//            }
//
//        }
//    }
//}