apply plugin: 'com.android.library'

android {
    compileSdkVersion 22
    buildToolsVersion '25.0.0'

    defaultConfig {
        minSdkVersion 15
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ targetModuleName : 'Other',// 模块名, 用于加载和生成映射关系
                              assetsDir : "$projectDir/src/main/assets".toString() // 可选, 配置时会自动生成assets/modules
                ]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/MANIFEST.MF'//duplicate entry: META-INF/MANIFEST.MF
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    annotationProcessor project(':router-compiler')
    compile project(':router-library')
    compileOnly project(':router-annotation')// 最终项目中不出现Annotation, 增加安全性
    api 'com.android.support:appcompat-v7:22.2.1'
}

android.libraryVariants.all { variant ->
    variant.outputs.all { output ->
        def outputFile = output.outputFile
        if (outputFile != null && outputFile.name.endsWith('.aar')) {
            if (outputFile.name.contains('debug')) {
                def name = "${rootDir}/libs/" + outputFile.name// router-demo-app
                print "=======> " + name + "\n"
//                output.outputFile = outputFile// 保留旧的library文件
//                output.outputFile = file(name)
                print outputFile.getClass()
                print outputFile.getPath()
//                output.outputFileName = name
            }

        }
    }
}

//android.libraryVariants.all { variant ->
//    variant.outputs.all { output ->  // each 改为 all
////        def fileName = "${variant.versionName}_release.apk"
//        def outFile = output.outputFile
//        if (outFile != null && outFile.name.endsWith('.apk')) {
//            def name = "${rootDir}/libs/" + outputFile.name// router-demo-app
//
//            output.outputFileName = name  //  output.outputFile 改为 outputFileName
//        }
//    }
//}

